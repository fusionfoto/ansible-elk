---
#
# Deploying ELK stack server using .deb files
#
### INSTALL DEPENDENCIES

  - name: Install dependencies and utilities
    apt:
      name: "{{item}}"
      state: present
    with_items:
      - aptitude
      - software-properties-common
      - apt-transport-https
      - language-pack-en
      - python-pip
      - vim
      - wget
      - curl
      - screen
      - zip
      - unzip
      - apache2-utils
      - python-passlib
      - default-jdk

  - name: Create directory for installer files
    file:
      path: /root/installers
      state: directory
      mode: 0755
      owner: root
      group: root

  - name: Copy all installers to target machine
    copy:
      src: files/installers/
      dest: /root/installers
      mode: 0755
      owner: root
      group: root

  ### INSTALL ELASTICSEARCH

  - name: Install Elasticsearch
    apt:
      deb: /root/installers/elasticsearch-5.4.0.deb

  - name: Start Elasticsearch on boot
    systemd:
      name: elasticsearch
      enabled: yes
      masked: no

  - name: Restart Elasticsearch
    service:
      name: elasticsearch
      state: restarted

  ### INSTALL LOGSTASH

  - name: Install Logstash
    apt:
      deb: /root/installers/logstash-5.4.0.deb

  - name: Start Logstash on boot
    systemd:
      name: logstash
      enabled: yes
      masked: no

  - name: Restart Logstash
    service:
      name: logstash
      state: restarted

  ### INSTALL KIBANA

  - name: Install Kibana
    apt:
      deb: /root/installers/kibana-5.4.0-amd64.deb

  - name: Start Kibana on boot
    systemd:
      name: kibana
      enabled: yes
      masked: no

  - name: Restart Kibana
    service:
      name: kibana
      state: restarted

  ### INSTALL CADDY SERVER

  - name: Untar Caddy tarball on remote host
    unarchive:
      src: files/installers/caddy_v0.10.2_linux_amd64.tar.gz
      dest: /tmp

  - name: Install Caddy Server
    copy:
      remote_src: True
      src: /tmp/caddy
      dest: /usr/local/bin/caddy
      mode: 0755
      owner: root
      group: root

  - name: Allow Caddy to bind to privileged ports (80, 443) as non-root user
    command: setcap 'cap_net_bind_service=+ep' /usr/local/bin/caddy
    become: true
    become_user: root

  - name: Set up Caddy directory
    file:
      path: /etc/caddy
      state: directory
      mode: 0755
      owner: root
      group: www-data

  - name: Set up SSL directory for Caddy
    file:
      path: /etc/ssl/caddy
      state: directory
      mode: 0770
      owner: www-data
      group: root

  - name: Put Caddyfile w/ reverse proxy config in place
    copy:
      src: files/config/caddy/Caddyfile
      dest: /etc/caddy/Caddyfile
      mode: 0444
      owner: www-data
      group: www-data

  - name: Create Caddy log directory
    file:
      path: /var/log/caddy
      state: directory
      owner: www-data
      group: root

  - name: Install systemd definition for Caddy
    copy:
      remote_src: True
      src: /tmp/init/linux-systemd/caddy.service
      dest: /etc/systemd/system/caddy.service
      mode: 0644
      owner: root
      group: root

  - name: Force systemd daemon reload
    systemd:
      name: caddy
      daemon_reload: yes

  - name: Start Caddy on boot
    systemd:
      name: caddy
      enabled: yes
      masked: no

  - name: Restart Caddy
    service:
      name: caddy
      state: restarted
